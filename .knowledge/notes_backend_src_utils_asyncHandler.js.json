{"is_source_file": true, "format": "JavaScript", "description": "This file defines an asynchronous error handler for Express route handlers, wrapping async functions to automatically catch and forward errors.", "external_files": [], "external_methods": [], "published": ["asyncHandler"], "classes": [], "methods": [{"name": "asyncHandler(fn)", "description": "Wraps async route handlers to catch rejected promises and forward errors to Express error handler.", "scope": "", "scopeKind": ""}], "calls": ["Promise.resolve", "fn(req, res, next)", "catch(next)"], "search-terms": ["asyncHandler", "Express", "async route handler", "error handling", "middleware", "Promise"], "state": 2, "file_id": 17, "knowledge_revision": 37, "git_revision": "", "ctags": [{"_type": "tag", "name": "asyncHandler", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-24022-24060/notes_backend/src/utils/asyncHandler.js", "pattern": "/^function asyncHandler(fn) {$/", "language": "JavaScript", "kind": "function", "signature": "(fn)"}], "hash": "927d752deb6e7b73d9c01fcc2678c5fb", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/utils/asyncHandler.js", "revision_history": [{"37": ""}]}